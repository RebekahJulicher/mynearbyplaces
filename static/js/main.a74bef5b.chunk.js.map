{"version":3,"sources":["ServerInterface/history.js","components/Home.js","components/Login.js","ServerInterface/data.js","ServerInterface/server.js","components/Place.js","components/List.js","components/Reviews.js","components/NewReview.js","App.js","reportWebVitals.js","index.js"],"names":["history","username","Home","props","onSubmit","event","preventDefault","setState","submit","onInputChange","value","target","toUpperCase","name","id","logout","state","city","category","this","destination","pathname","to","prevProps","location","place","Container","Row","Col","sm","length","Button","variant","onClick","from","removing","Form","Group","controlId","Label","Control","type","onChange","placeholder","React","Component","Login","trim","authenticated","onCancel","withRouter","places","equality","one","two","reviews","server","addPlace","newPlace","push","getAllPlaces","removePlace","i","currPlace","splice","addReview","review","find","x","updatePlace","search","result","filter","Place","onAddSubmit","console","log","done","onRemoveSubmit","addForm","removeForm","List","body","map","q","className","size","block","allPlaces","Reviews","stars","user","content","NewReview","as","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a74bef5b.chunk.js","sourcesContent":["let history = {username: ''};\nexport default history;","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport history from '../ServerInterface/history.js';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            city: '',\n            state: '',\n            category: '',\n            submit: false\n        }\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ submit: true });\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value.toUpperCase();\n        const name = event.target.id;\n        this.setState({ [name]: value });\n    }\n\n    logout = () => {\n        this.setState({ username: '' });\n        history.username = '';\n    }\n\n    render() {\n        const { city, state, category, submit } = this.state;\n        if (submit === true) {\n            let destination = {\n                pathname: '/list', state: { city: city, state: state, category: category }\n            };\n            return (<Redirect to={destination} />);\n        }\n\n        let username = history.username;\n        const { prevProps } = this.props.location;\n        let place = {};\n        if (prevProps) {\n            place = prevProps.place;\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <Col sm={2}>\n                        {username.length > 0 ?\n                            <Col>\n                                <Row>{history.username}</Row>\n                                <Row>\n                                    <Button variant=\"btn btn-outline-primary btn-sm\" onClick={this.logout}>Logout</Button>\n                                </Row>\n                            </Col>\n                            : <Row><Button variant=\"btn btn-outline-primary btn-sm\">\n                                <Link to={{ pathname: '/login', place: place, from: '/mynearbyplaces' }}>Login</Link>\n                                </Button></Row>}\n                        <Row>\n                            <Link to={{ pathname: \"/place\", removing: false }}>Add a business</Link>\n                        </Row>\n                        <Row>\n                            <Link to={{ pathname: \"/place\", removing: true }}>Remove a business</Link>\n                        </Row>\n                    </Col>\n                    <Col sm={8}>Search for local businesses:\n                    <Form onSubmit={this.onSubmit}>\n                            <Form.Group controlId=\"city\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control type=\"text\" value={city}\n                                    onChange={this.onInputChange} placeholder=\"Enter city\" />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"state\">\n                                <Form.Label>State</Form.Label>\n                                <Form.Control type=\"text\" value={state}\n                                    onChange={this.onInputChange} placeholder=\"Enter state\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"category\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control type=\"text\" value={category}\n                                    onChange={this.onInputChange} placeholder=\"Enter category\" />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\">Search</Button>\n                        </Form>\n                    </Col>\n                </Row>\n\n            </Container>\n        );\n    }\n}\nexport default Home;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport history from '../ServerInterface/history.js';\nimport { withRouter } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            authenticated: false\n        };\n    }\n\n    onSubmit = (event) => {\n        if(this.state.username.trim().length > 0) {\n            history.username = this.state.username;\n            this.setState({authenticated: true});\n        }\n        event.preventDefault();\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.id;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        if (this.props.location.from == \"/list\"){\n            let from = {pathname: \"/mynearbyplaces\", prevProps: this.props.location};\n            if(this.state.authenticated) {\n                return (\n                    <Redirect to={from} />\n                );\n            }\n        }\n        else{\n            let from = {pathname: this.props.location.from, prevProps: this.props.location};\n            if(this.state.authenticated) {\n                return (\n                    <Redirect to={from} />\n                );\n            }\n        }\n\n        return (\n            <Container>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Username:</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.onInputChange} \n                        placeholder=\"Enter username\" />\n                    </Form.Group>\n                    <Button variant=\"secondary\" onClick={this.onCancel} >Cancel</Button>\n                    <Button type=\"submit\">Login</Button>\n                </Form>\n            </Container>\n        )\n    }\n\n}\n\nexport default withRouter(Login);","let places = [];\nexport default places;","import places from \"./data.js\";\n\nlet equality = (one, two) => {\n    if (one.name === two.name && one.category === two.category && one.city === two.city\n        && one.state === two.state && one.reviews === two.reviews) {\n            return true;\n        }\n    return false;\n}\n\nlet addPlace = (name, category, city, state) => {\n    let newPlace = {name: name, category: category, city: city, state: state, reviews: [] };\n    places.push(newPlace);\n}\n\nlet removePlace = (name, category, city, state) => {\n    let newPlace = {name: name, category: category, city: city, state: state};\n    for(let i = 0; i < places.length; i++){\n        let currPlace = places[i];\n        if (equality(newPlace, currPlace)){\n                places.splice(i,1);\n            }\n    }\n}\n\nlet updatePlace = (place, name, category, city, state) => {\n    for(let i = 0; i < places.length; i++){\n        let currPlace = places[i];\n        if (equality(place, currPlace)){\n            if (name.length !== 0){\n                places[i].name = name;\n            }\n            if (category.length !== 0){\n                places[i].category = category;\n            }\n            if (city.length !== 0){\n                places[i].city = city;\n            }\n            if (state.length !== 0){\n                places[i].state = state;\n            }\n        }\n    }\n}\n\nlet search = (city, state, category) => {\n    let result = [];\n    if (city.length > 0) {\n        result = places.filter(x => x.city === city);\n    }\n    if (state.length > 0) {\n        if (city.length > 0){\n            result = result.filter(x => x.state === state);\n        }\n        else {\n            result = places.filter(x => x.state === state);\n        }\n    }\n    if (category.length > 0) {\n        if (city.length > 0 || state.length > 0){\n            result = result.filter(x => x.category === category);\n        }\n        else {\n            result = places.filter(x => x.category === category);\n        }\n    }\n    if (city.length === 0 && state.length === 0 && category.length === 0){\n        return places;\n    }\n    return result;\n}\n\nlet addReview = (place, review) => {\n    let currPlace = places.find(x => equality(x, place));\n    if (currPlace){\n        currPlace.reviews.push(review);\n    }\n}\nlet getAllPlaces = () => {\n    return places;\n}\nlet server = {addPlace: addPlace, getAllPlaces: getAllPlaces, removePlace: removePlace,\n     addReview: addReview, updatePlace: updatePlace, search: search};\n\nexport default server;","import server from \"../ServerInterface/server.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass Place extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            category: '',\n            city: '',\n            state: '',\n            done: false\n        }\n    };\n\n    onAddSubmit = (event) => {\n        const { name, category, city, state } = this.state;\n        server.addPlace(name, category, city, state);\n        event.preventDefault();\n        console.log(server.getAllPlaces());\n        this.setState({ done: true });\n    }\n\n    onRemoveSubmit = (event) => {\n        const { name, category, city, state } = this.state;\n        server.removePlace(name, category, city, state);\n        event.preventDefault();\n        console.log(server.getAllPlaces());\n        this.setState({ done: true });\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({ done: true });\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value.toUpperCase();\n        const name = event.target.id;\n        this.setState({ [name]: value });\n    }\n\n    addForm = () => {\n        return (\n            <Container>\n                <Row>\n                    <Col><Form onSubmit={this.onAddSubmit}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" value={this.state.name}\n                                onChange={this.onInputChange} placeholder=\"Enter name\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control type=\"text\" value={this.state.category}\n                                onChange={this.onInputChange} placeholder=\"Enter category\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"city\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control type=\"text\" value={this.state.city}\n                                onChange={this.onInputChange} placeholder=\"Enter city\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"state\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control type=\"text\" value={this.state.state}\n                                onChange={this.onInputChange} placeholder=\"Enter state\" />\n                        </Form.Group>\n\n                        <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                        <Button variant=\"primary\" type=\"submit\">Add Business</Button>\n                    </Form></Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    removeForm = () => {\n        return (\n            <Row>\n                <Col><Form onSubmit={this.onRemoveSubmit}>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.name}\n                            onChange={this.onInputChange} placeholder=\"Enter name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"category\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.category}\n                            onChange={this.onInputChange} placeholder=\"Enter category\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.city}\n                            onChange={this.onInputChange} placeholder=\"Enter city\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"state\">\n                        <Form.Label>State</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.state}\n                            onChange={this.onInputChange} placeholder=\"Enter state\" />\n                    </Form.Group>\n\n                    <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                    <Button variant=\"primary\" type=\"submit\">Remove Business</Button>\n                </Form></Col>\n            </Row>\n        )\n    }\n\n    render() {\n        let from = { pathname: '/mynearbyplaces' };\n        if (this.state.done) {\n            return (<Redirect to={from} />);\n        }\n        return (\n            <Container>\n                {this.props.location.removing === false ?\n                    this.addForm()\n                    :\n                    this.removeForm()}\n            </Container>\n        )\n    }\n}\nexport default Place;","import server from \"../ServerInterface/server.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport history from '../ServerInterface/history.js';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            places: [],\n        }\n    };\n\n    logout = () => {\n        this.setState({ username: '' });\n        history.username = '';\n    }\n\n    body = () => {\n        const { prevProps } = this.props.location;\n        let place = {};\n        if (prevProps) {\n            place = prevProps.place;\n        }\n        return (\n            <Container>\n                <Row>\n                    <Col sm={2}>\n                        {history.username.length > 0 ?\n                            <Col>\n                                <Row>{history.username}</Row>\n                                <Row>\n                                    <Button variant=\"btn btn-outline-primary btn-sm\" onClick={this.logout}>Logout</Button>\n                                </Row>\n                            </Col>\n                            : <Row><Button variant=\"btn btn-outline-primary btn-sm\">\n                                <Link to={{ pathname: '/login', place: place, from: '/list' }}>Login</Link>\n                            </Button></Row>}\n                    </Col>\n                    {this.state.places.length > 0 ?\n                        <Col sm={8}>\n                            {this.state.places.map((q, i) =>\n                                <Row key={i}>\n                                    <Col>\n                                        <Link className=\"storeLink\" to={{ pathname: \"/reviews\", prevProps: { place: q } }}>\n                                            <Button variant=\"outline-secondary\" size=\"lg\" block>\n                                                <Row><b>{q.name}</b></Row>\n                                                <Row>{q.city}, {q.state}</Row>\n                                                <Row>{q.category}</Row>\n                                            </Button>\n                                        </Link>\n                                    </Col>\n                                </Row>)}\n                            <Row>\n                                <Link to={{ pathname: \"/place\", removing: false }}>Add a business</Link>\n                            </Row>\n                            <Row>\n                                <Link to={{ pathname: \"/place\", removing: true }}>Remove a business</Link>\n                            </Row>\n                            <Row>\n                                <Button variant=\"outline-warning\" size=\"small\">\n                                    <Link to=\"/mynearbyplaces\">Back to search</Link>\n                                </Button>\n                            </Row>\n                        </Col>\n                        : <Col sm={8}>\n                            <Row>No businesses found matching that criteria.</Row>\n                            <Row>\n                                <Link to={{ pathname: \"/place\", removing: false }}>Add a business</Link>\n                            </Row>\n                            <Row>\n                                <Link to={{ pathname: \"/place\", removing: true }}>Remove a business</Link>\n                            </Row>\n                            <Row>\n                                <Button variant=\"outline-warning\" size=\"small\">\n                                    <Link to=\"/mynearbyplaces\">Back to search</Link>\n                                </Button>\n                            </Row>\n                        </Col>}\n                </Row>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        const { city, state, category, } = this.props.location.state;\n\n        let allPlaces = server.search(city, state, category);\n\n        this.setState({ places: allPlaces });\n    }\n\n    render() {\n        return (\n            this.body()\n        );\n    }\n\n}\nexport default List;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport history from '../ServerInterface/history.js';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass Reviews extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n\n    logout = () => {\n        this.setState({ username: '' });\n        history.username = '';\n    }\n\n    body = () => {\n        const { prevProps } = this.props.location;\n        let place = {};\n        if (prevProps){\n            place = prevProps.place;\n        }\n        return (\n            <Row>\n                <Col sm={2}>\n                        {history.username.length > 0 ?\n                            <Col>\n                                <Row>{history.username}</Row>\n                                <Row>\n                                    <Button variant=\"btn btn-outline-primary btn-sm\" onClick={this.logout}>Logout</Button>\n                                </Row>\n                            </Col>\n                            : <Row><Button variant=\"btn btn-outline-primary btn-sm\">\n                                <Link to={{ pathname: '/login', place: place, from: '/reviews' }}>Login</Link>\n                                </Button></Row>}\n                    </Col>\n                {place.reviews.length > 0 ?\n                    <Col sm={8}>\n                        {place.reviews.map((q, i) =>\n                            <Col key={i}>\n                                <Row><b>{q.stars + \"/5 stars     - \" + q.user}</b></Row>\n                                <Row>{q.content}</Row>\n                            </Col>)}\n                        {history.username.length > 0 ?\n                        <Link to={{ pathname: \"/newreview\", place: place, from: '/reviews' }}>Create a new review</Link>\n                        :\n                        <Row>Log in to post a review</Row>}\n                        <Row>\n                                <Button variant=\"outline-warning\" size=\"small\">\n                                    <Link to=\"/mynearbyplaces\">Back to search</Link>\n                                </Button>\n                            </Row>\n                    </Col>\n                    : <Col sm={8}>\n                        <Row>No reviews found for this business</Row>\n                        {history.username.length > 0 ?\n                        <Row><Link to={{ pathname: \"/newreview\", place: place, from: '/reviews' }}>Be the first</Link></Row>\n                        :\n                        <Row>Log in to post a review</Row>}\n                        <Row>\n                                <Button variant=\"outline-warning\" size=\"small\">\n                                    <Link to=\"/mynearbyplaces\">Back to search</Link>\n                                </Button>\n                            </Row>\n                    </Col>}\n            </Row>\n        );\n    }\n\n\n    render() {\n        return (\n            <Container>\n                {this.body()}\n            </Container>\n        );\n    }\n\n}\nexport default Reviews;","import server from \"../ServerInterface/server.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport history from '../ServerInterface/history.js';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass NewReview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stars: 0,\n            content: '',\n            done: false\n        };\n    };\n\n    onSubmit = (event) => {\n        const { stars, content } = this.state;\n        server.addReview(this.props.location.place, { stars: stars, content: content, user: history.username });\n        event.preventDefault();\n        this.setState({ done: true });\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({ done: true });\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.id;\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        let from = { pathname: this.props.location.from, prevProps: this.props.location };\n        if (this.state.done) {\n            return (<Redirect to={from} />);\n        }\n        return (\n            <Container>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Group controlId=\"stars\">\n                        <Form.Label>Stars:</Form.Label>\n                        <Form.Control as=\"select\" onChange={this.onInputChange}>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"content\">\n                        <Form.Label>Review:</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.content} onChange={this.onInputChange} placeholder=\"Enter content\" />\n                    </Form.Group>\n                    <Button variant=\"secondary\" onClick={this.onCancel} >Cancel</Button>\n                    <Button type=\"submit\">Submit</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\nexport default NewReview;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport './App.css';\nimport Place from './components/Place.js';\nimport List from './components/List.js';\nimport Reviews from './components/Reviews.js';\nimport NewReview from './components/NewReview.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/mynearbyplaces/' render={props => <Home {...props} />}>\n        </Route>\n        <Route path='/login' render={props => <Login {...props} />}>\n        </Route>\n        <Route path='/place' render={props => <Place {...props} />}>\n        </Route>\n        <Route path='/list' render={props => <List {...props} />}>\n        </Route>\n        <Route path='/reviews' render={props => <Reviews {...props} />}>\n        </Route>\n        <Route path='/newreview' render={props => <NewReview {...props} />}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}